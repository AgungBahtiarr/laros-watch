---
import Layout from "../layouts/Layout.astro";
import type { Node, Connection } from "../types";

const apiBaseUrl =
    import.meta.env.PUBLIC_API_BASE_URL || "http://localhost:3000";
const osrmApiUrl = import.meta.env.PUBLIC_OSRM_API_URL;

// Fetch nodes and connections
const [nodesResponse, connectionsResponse] = await Promise.all([
    fetch(`${apiBaseUrl}/api/nodes`),
    fetch(`${apiBaseUrl}/api/nodes/connections`),
]);

const nodes: Node[] = await nodesResponse.json();
const connections: Connection[] = await connectionsResponse.json();

const nodesWithLocation = nodes.filter((node) => node.lat && node.lng);
const nodeMap = new Map(nodes.map((node) => [node.id, node]));

// Prepare route promises
const routePromises = connections.map((conn) => {
    const nodeA = nodeMap.get(conn.deviceAId);
    const nodeB = nodeMap.get(conn.deviceBId);

    if (nodeA && nodeB && osrmApiUrl) {
        const url = `${osrmApiUrl}/${nodeA.lng},${nodeA.lat};${nodeB.lng},${nodeB.lat}?overview=full&geometries=geojson`;
        return fetch(url)
            .then((res) => res.json())
            .catch((error) => {
                console.error("OSRM API Fetch Error for URL:", url, error);
                return null;
            });
    }
    return Promise.resolve(null);
});

const routeResults = await Promise.all(routePromises);

const routes = routeResults
    .map((result, index) => {
        if (result && result.routes && result.routes.length > 0) {
            return {
                geometry: result.routes[0].geometry,
                distance: result.routes[0].distance, // in meters
                connectionId: connections[index].id,
            };
        }
        return null;
    })
    .filter(Boolean);
---

<Layout title="Nodes Map">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-6">Nodes Map & Connections</h1>
        <div id="map" class="h-[600px] rounded-lg shadow-lg mb-8"></div>

        <!-- Connections Table -->
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold">Connections</h2>
            <label for="add-connection-modal" class="btn btn-primary"
                >Add Connection</label
            >
        </div>
        <div class="overflow-x-auto">
            <table class="table w-full">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Device A</th>
                        <th>Device B</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        connections.map((conn) => (
                            <tr data-connection-id={conn.id}>
                                <td>{conn.description}</td>
                                <td>
                                    {nodeMap.get(conn.deviceAId)?.name ||
                                        "Unknown"}
                                </td>
                                <td>
                                    {nodeMap.get(conn.deviceBId)?.name ||
                                        "Unknown"}
                                </td>
                                <td class="flex gap-2">
                                    <button class="btn btn-sm btn-success btn-view">
                                        View
                                    </button>
                                    <button class="btn btn-sm btn-info btn-edit">
                                        Edit
                                    </button>
                                    <button class="btn btn-sm btn-error btn-delete">
                                        Delete
                                    </button>
                                    <button class="btn btn-sm btn-warning btn-find-point">
                                        Find Point
                                    </button>
                                </td>
                            </tr>
                        ))
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Add/Edit Modal -->
    <input type="checkbox" id="add-connection-modal" class="modal-toggle" />
    <div class="modal">
        <div class="modal-box w-11/12 max-w-2xl">
            <h3 class="font-bold text-lg" id="modal-title">
                Add New Connection
            </h3>
            <form id="connection-form">
                <input type="hidden" id="connection-id" name="connectionId" />
                <div class="form-control">
                    <label class="label" for="description">Description</label>
                    <input
                        type="text"
                        id="description"
                        name="description"
                        class="input input-bordered"
                        required
                    />
                </div>
                <div class="grid grid-cols-2 gap-4 mt-4">
                    <div class="form-control">
                        <label class="label" for="deviceAId">Device A</label>
                        <select
                            id="deviceAId"
                            name="deviceAId"
                            class="select select-bordered"
                            required
                        >
                            <option disabled selected>Select Device</option>
                            {
                                nodes.map((node) => (
                                    <option value={node.id}>{node.name}</option>
                                ))
                            }
                        </select>
                    </div>
                    <div class="form-control">
                        <label class="label" for="portAId">Port A</label>
                        <select
                            id="portAId"
                            name="portAId"
                            class="select select-bordered"
                            required
                            disabled></select>
                    </div>
                    <div class="form-control">
                        <label class="label" for="deviceBId">Device B</label>
                        <select
                            id="deviceBId"
                            name="deviceBId"
                            class="select select-bordered"
                            required
                        >
                            <option disabled selected>Select Device</option>
                            {
                                nodes.map((node) => (
                                    <option value={node.id}>{node.name}</option>
                                ))
                            }
                        </select>
                    </div>
                    <div class="form-control">
                        <label class="label" for="portBId">Port B</label>
                        <select
                            id="portBId"
                            name="portBId"
                            class="select select-bordered"
                            required
                            disabled></select>
                    </div>
                </div>
                <div class="form-control mt-4">
                    <label class="label" for="odpPath"
                        >ODP Path (comma-separated IDs)</label
                    >
                    <input
                        type="text"
                        id="odpPath"
                        name="odpPath"
                        class="input input-bordered"
                    />
                </div>
                <div class="modal-action">
                    <label for="add-connection-modal" class="btn">Cancel</label>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Find Point Modal -->
    <input type="checkbox" id="find-point-modal" class="modal-toggle" />
    <div class="modal">
        <div class="modal-box">
            <h3 class="font-bold text-lg">Find Point on Route</h3>
            <form id="find-point-form">
                <input type="hidden" id="find-point-connection-id" />
                <div class="form-control">
                    <label class="label" for="start-node-select"
                        >Start From</label
                    >
                    <select
                        id="start-node-select"
                        class="select select-bordered"
                    >
                        <!-- Options will be populated dynamically -->
                    </select>
                </div>
                <div class="form-control mt-4">
                    <label class="label" for="distance-input"
                        >Distance (meters)</label
                    >
                    <input
                        type="number"
                        id="distance-input"
                        class="input input-bordered"
                        required
                    />
                </div>
                <div class="modal-action">
                    <label for="find-point-modal" class="btn">Cancel</label>
                    <button type="submit" class="btn btn-primary">Find</button>
                </div>
            </form>
        </div>
    </div>

    <script
        define:vars={{
            nodes,
            connections,
            nodesWithLocation,
            routes,
            apiBaseUrl,
        }}
    >
        window.pageData = {
            nodes,
            connections,
            nodesWithLocation,
            routes,
            apiBaseUrl,
        };
    </script>
    <script>
        import { init } from "../utils/map-logic.ts";
        document.addEventListener("DOMContentLoaded", () => {
            init(window.pageData);
        });
    </script>
</Layout>
